apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka
metadata:
  name: lins
  namespace: kafka
spec:
  kafka:
    metricsConfig:
      type: jmxPrometheusExporter
      valueFrom:
        configMapKeyRef:
          name: kafka-metrics
          key: kafka-metrics-config.yml
    version: 2.8.1
    replicas: 3
    rack:
      topologyKey: kubernetes.io/hostname
    listeners:
      - name: plain
        port: 9092
        tls: false
        type: internal
      - name: tls
        port: 9093
        tls: true
        type: internal
    config:
      ############################ https://www.orchome.com/kafka/index
      ############################ System
      auto.create.topics.enable: true
      delete.topic.enable: true
      unclean.leader.election.enable: true
      default.replication.factor: 1
      min.insync.replicas: 1
      num.partitions: 1
      max.request.size: 10485760
      max.message.bytes: 10485760
      background.threads: 10
      num.io.threads: 8 # cpu数2倍～3倍
      num.network.threads: 3 # cpu数+1
      num.recovery.threads.per.data.dir: 1
      num.replica.fetchers: 1
      ############################ Timeout
      group.max.session.timeout.ms: 300000
      # group.max.session.timeout.ms(server.properties) > session.timeout.ms(consumer.properties) > group.min.session.timeout.ms(server.properties)
      # request.timeout.ms > session.timeout.ms and fetch.max.wait.ms
      # (session.timeout.ms)/3 > heartbeat.interval.ms
      session.timeout.ms: 60000
      # session.timeout.ms > Worst case processing time of Consumer Records per consumer poll(ms)
      group.min.session.timeout.ms: 6000
      zookeeper.session.timeout.ms: 6000
      ############################ Offsets
      offsets.commit.required.acks: -1
      offsets.topic.num.partitions: 50
      offsets.topic.replication.factor: 3
      offsets.topic.segment.bytes: 104857600 # 100Mi
      ############################ Replica
      replica.fetch.min.bytes: 1
      replica.fetch.max.bytes: 10485760 # 10Mi
      ############################ Log
      log.cleaner.enable: true
      log.cleanup.policy: delete # compact, delete
      log.flush.interval.messages: 1000
      log.flush.interval.ms: 10000
      log.flush.scheduler.interval.ms: 3000
      log.retention.bytes: 10737418240 # 10Gb, -1不限制
      log.retention.hours: 168 # ms > minutes > hours
      log.roll.hours: 24 # ms > hours
      log.roll.jitter.hours: 0 # ms > hours
      log.segment.bytes: 104857600
      log.segment.delete.delay.ms: 0
      log.retention.check.interval.ms: 300000
      ############################ Transaction
      transaction.state.log.min.isr: 2
      transaction.state.log.num.partitions: 50
      transaction.state.log.replication.factor: 3
      transaction.state.log.segment.bytes: 104857600
    jvmOptions:
      -XX:
        ExitOnOutOfMemoryError: true
        UseContainerSupport: true
        MaxRAMPercentage: 75.0
        InitialRAMPercentage: 50.0
        MinRAMPercentage: 50.0
      gcLoggingEnabled: true
      javaSystemProperties:
        - name: file.encoding
          value: UTF-8
    livenessProbe:
      initialDelaySeconds: 30
    readinessProbe:
      initialDelaySeconds: 30
    resources:
      limits:
        cpu: 1000m
        memory: 4Gi
      requests:
        cpu: 500m
        memory: 2Gi
    storage:
      deleteClaim: false
      size: 100Gi
      type: persistent-claim
    template:
      initContainer:
        env:
          - name: TZ
            value: Asia/Shanghai
      pod:
        enableServiceLinks: false
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                - matchExpressions:
                    - key: kafka
                      operator: Exists
      kafkaContainer:
        env:
          - name: TZ
            value: Asia/Shanghai
  kafkaExporter:
    enableSaramaLogging: true
    groupRegex: '.*'
    topicRegex: '.*'
    livenessProbe:
      initialDelaySeconds: 5
    readinessProbe:
      initialDelaySeconds: 5
    resources:
      limits:
        cpu: 1000m
        memory: 500Mi
      requests:
        cpu: 1000m
        memory: 500Gi
    template:
      container:
        env:
          - name: TZ
            value: Asia/Shanghai
      pod:
        enableServiceLinks: false
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                - matchExpressions:
                    - key: kafka
                      operator: Exists
  zookeeper:
    metricsConfig:
      type: jmxPrometheusExporter
      valueFrom:
        configMapKeyRef:
          name: kafka-metrics
          key: zookeeper-metrics-config.yml
    replicas: 3
    jvmOptions:
      -XX:
        ExitOnOutOfMemoryError: true
        UseContainerSupport: true
        MaxRAMPercentage: 75.0
        InitialRAMPercentage: 50.0
        MinRAMPercentage: 50.0
      gcLoggingEnabled: true
      javaSystemProperties:
        - name: file.encoding
          value: UTF-8
    livenessProbe:
      initialDelaySeconds: 10
    readinessProbe:
      initialDelaySeconds: 10
    resources:
      limits:
        cpu: 500m
        memory: 1Gi
      requests:
        cpu: 500m
        memory: 1Gi
    storage:
      deleteClaim: false
      size: 10Gi
      type: persistent-claim
    template:
      pod:
        enableServiceLinks: false
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
              - podAffinityTerm:
                  topologyKey: kubernetes.io/hostname
                  labelSelector:
                    matchLabels:
                      app.kubernetes.io/name: zookeeper
                weight: 100
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                - matchExpressions:
                    - key: kafka
                      operator: Exists
      zookeeperContainer:
        env:
          - name: TZ
            value: Asia/Shanghai
  entityOperator:
    tlsSidecar:
      livenessProbe:
        initialDelaySeconds: 15
      readinessProbe:
        initialDelaySeconds: 15
      resources:
        limits:
          cpu: 500m
          memory: 512Mi
        requests:
          cpu: 500m
          memory: 512Mi
    template:
      pod:
        enableServiceLinks: false
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
                - matchExpressions:
                    - key: kafka
                      operator: Exists
      topicOperatorContainer:
        env:
          - name: TZ
            value: Asia/Shanghai
      userOperatorContainer:
        env:
          - name: TZ
            value: Asia/Shanghai
    topicOperator:
      jvmOptions:
        -XX:
          ExitOnOutOfMemoryError: true
          UseContainerSupport: true
          MaxRAMPercentage: 75.0
          InitialRAMPercentage: 50.0
          MinRAMPercentage: 50.0
        gcLoggingEnabled: true
        javaSystemProperties:
          - name: file.encoding
            value: UTF-8
      livenessProbe:
        initialDelaySeconds: 15
      readinessProbe:
        initialDelaySeconds: 15
      resources:
        limits:
          cpu: 500m
          memory: 512Mi
        requests:
          cpu: 500m
          memory: 512Mi
    userOperator:
      jvmOptions:
        -XX:
          ExitOnOutOfMemoryError: true
          UseContainerSupport: true
          MaxRAMPercentage: 75.0
          InitialRAMPercentage: 50.0
          MinRAMPercentage: 50.0
        gcLoggingEnabled: true
        javaSystemProperties:
          - name: file.encoding
            value: UTF-8
      livenessProbe:
        initialDelaySeconds: 15
      readinessProbe:
        initialDelaySeconds: 15
      resources:
        limits:
          cpu: 500m
          memory: 512Mi
        requests:
          cpu: 500m
          memory: 512Mi
