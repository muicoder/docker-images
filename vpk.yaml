---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vpk
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vpk
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: vpk
    namespace: default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: vpk
  name: vpk
  namespace: default
spec:
  minReadySeconds: 5
  progressDeadlineSeconds: 10
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: vpk
  template:
    metadata:
      labels:
        app.kubernetes.io/name: vpk
    spec:
      containers:
        - command:
            - sh
            - -ce
            - |-
              mkdir -p $HOME/.kube
              [ -s $HOME/.kube/config ] || cat <<EOF>$HOME/.kube/config
              apiVersion: v1
              clusters:
              - cluster:
                  certificate-authority-data: $(cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt | base64 -w0)
                  server: https://kubernetes.default
                name: internal
              contexts:
              - context:
                  cluster: internal
                  user: internal
                  namespace: $(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace)
                name: internal
              current-context: internal
              kind: Config
              users:
              - name: internal
                user:
                  token: $(cat /var/run/secrets/kubernetes.io/serviceaccount/token)
              EOF
              exec node server.js -p 4200 -c yes
          env:
            - name: TZ
              value: Asia/Shanghai
          image: muicoder/vpk:6
          name: vpk
          ports:
            - containerPort: 4200
              name: http
          readinessProbe:
            httpGet:
              port: http
            periodSeconds: 5
          securityContext:
            runAsGroup: 0
            runAsUser: 0
      enableServiceLinks: false
      nodeName: vpk
      serviceAccountName: vpk
      shareProcessNamespace: true
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: vpk
  name: vpk
spec:
  ports:
    - name: http
      nodePort: 30000
      port: 80
      protocol: TCP
      targetPort: http
  selector:
    app.kubernetes.io/name: vpk
  type: NodePort
