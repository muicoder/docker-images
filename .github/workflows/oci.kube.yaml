env:
  BASE64docker: RlJPTSBhbHBpbmU6My4xNwpDT1BZIGNhY2hlZC8qIC8KRU5UUllQT0lOVCBbInRhaWwiLCAiLUYiXQpDTUQgWyIvZXRjL2hvc3RzIl0K
  BASE64manifest: IyEvYmluL3NoCgpDTUQ9JChpZiBidWlsZGFoID4vZGV2L251bGw7IHRoZW4gZWNobyBidWlsZGFoOyBlbGlmIHNlYWxvcyA+L2Rldi9udWxsOyB0aGVuIGVjaG8gc2VhbG9zOyBmaSkKTUY9Im1mOiQoZGF0ZSArJUYpIgoKUkVQTz0iJHsxOi1kb2NrZXIuaW8vYml0bmFtaS9tZXRyaWNzLXNlcnZlcjpkb2NrZXIuaW8vbXVpY29kZXIvbWV0cmljcy1zZXJ2ZXJ9IgpUQUdTPSIkezI6LTAuNi4zfSIKVEFHPSIkezM6LSRUQUdTfSIKCmlmIFsgIiR7UkVQTyU6Kn0iICE9ICIkUkVQTyIgXTsgdGhlbgogIGlmIFsgIiR7VEFHUyUsKn0iICE9ICIkVEFHUyIgXTsgdGhlbgogICAgZWNobyAiJFRBR1MiIHwgc2VkICJzfix+XG5+ZyIgfCB3aGlsZSByZWFkIC1yIHRhZzsgZG8KICAgICAgZWNobyAiJHtSRVBPJToqfTokdGFnIgogICAgZG9uZSB8ICRDTUQgcHVsbAogIGVsc2UKICAgICRDTUQgcHVsbCAtLXBvbGljeT1hbHdheXMgLS1wbGF0Zm9ybT1saW51eC9hbWQ2NCAiJHtSRVBPJToqfTokVEFHUyIKICAgICRDTUQgdGFnICIke1JFUE8lOip9OiRUQUdTIiAiJHtSRVBPIyo6fTokVEFHUy1hbWQ2NCIKICAgICRDTUQgcHVsbCAtLXBvbGljeT1hbHdheXMgLS1wbGF0Zm9ybT1saW51eC9hcm02NCAiJHtSRVBPJToqfTokVEFHUyIKICAgICRDTUQgdGFnICIke1JFUE8lOip9OiRUQUdTIiAiJHtSRVBPIyo6fTokVEFHUy1hcm02NCIKICAgIFRBR1M9IiRUQUdTLWFtZDY0LCRUQUdTLWFybTY0IgogIGZpCmZpCgplY2hvICIkVEFHUyIgfCBzZWQgInN+LH5cbn5nIiB8IHdoaWxlIHJlYWQgLXIgdGFnOyBkbwogIGVjaG8gIiR7UkVQTyMqOn06JHRhZyIKZG9uZSB8IHhhcmdzICRDTUQgbWFuaWZlc3QgY3JlYXRlIC0tYWxsICIkTUYiCiRDTUQgbWFuaWZlc3QgcHVzaCAtLWFsbCAiJE1GIiAiZG9ja2VyOi8vJHtSRVBPIyo6fTokVEFHIgokQ01EIG1hbmlmZXN0IHJtICIkTUYiIHx8IHRydWUK
jobs:
  aio-manifest:
    needs:
      - k9s
      - kube-eventer
      - milvus-backup
    runs-on: ubuntu-latest
    steps:
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
      - name: manifest
        run: |-
          for module in k9s kube-eventer milvus-backup; do
            echo ${{ env.BASE64manifest }} | base64 -d | sh -s docker.io/${{ secrets.DOCKERHUB_USERNAME }}/$module action-amd64,action-arm64 stable
          done
  k9s:
    env:
      GITHUB_REPO: k9s
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: actions/setup-go@v5
      - name: Build artifacts
        run: |-
          sudo docker run --entrypoint /bin/sh --rm -e ARCH=${{ matrix.arch }} -v "$PWD/cached:/cached" -v "$PWD/.github/scripts/${{ env.GITHUB_REPO }}.build:/build.${{ matrix.os }}:ro" -w / golang:1 /build.${{ matrix.os }}
          echo ${{ env.BASE64docker }} | base64 -d >Dockerfile
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          platforms: ${{ matrix.os}}/${{ matrix.arch}}
          provenance: false
          pull: true
          push: true
          sbom: false
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.GITHUB_REPO }}:action-${{ matrix.arch}}
    strategy:
      matrix:
        arch:
          - arm64
          - amd64
        os:
          - linux
  kube-eventer:
    env:
      GITHUB_REPO: kube-eventer
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: actions/setup-go@v5
      - name: Build artifacts
        run: |-
          sudo docker run --entrypoint /bin/sh --rm -e ARCH=${{ matrix.arch }} -v "$PWD/cached:/cached" -v "$PWD/.github/scripts/${{ env.GITHUB_REPO }}.build:/build.${{ matrix.os }}:ro" -w / golang:1 /build.${{ matrix.os }}
          echo ${{ env.BASE64docker }} | base64 -d >Dockerfile
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          platforms: ${{ matrix.os}}/${{ matrix.arch}}
          provenance: false
          pull: true
          push: true
          sbom: false
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.GITHUB_REPO }}:action-${{ matrix.arch}}
    strategy:
      matrix:
        arch:
          - arm64
          - amd64
        os:
          - linux
  milvus-backup:
    env:
      GITHUB_REPO: milvus-backup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: actions/setup-go@v5
      - name: Build artifacts
        run: |-
          sudo docker run --entrypoint /bin/sh --rm -e ARCH=${{ matrix.arch }} -v "$PWD/cached:/cached" -v "$PWD/.github/scripts/${{ env.GITHUB_REPO }}.build:/build.${{ matrix.os }}:ro" -w / golang:1 /build.${{ matrix.os }}
          echo ${{ env.BASE64docker }} | base64 -d >Dockerfile
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          platforms: ${{ matrix.os}}/${{ matrix.arch}}
          provenance: false
          pull: true
          push: true
          sbom: false
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.GITHUB_REPO }}:action-${{ matrix.arch}}
    strategy:
      matrix:
        arch:
          - arm64
          - amd64
        os:
          - linux
name: oci::binaries-kube
on:
  workflow_dispatch:
